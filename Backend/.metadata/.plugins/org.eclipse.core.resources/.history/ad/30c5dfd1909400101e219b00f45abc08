package com.klef.sdp.controller;

import com.klef.sdp.dto.ProgressResponse;
import com.klef.sdp.model.Task;
import com.klef.sdp.service.TaskService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import java.util.List;

@CrossOrigin("*") // allow React dev server; modify if needed
@RestController
@RequestMapping("/tasks")
public class TaskController {

    @Autowired
    private TaskService taskService;

    // Add task
    @PostMapping("/addtask")
    public ResponseEntity<?> addTask(@RequestBody Task task) {
        try {
            Task saved = taskService.addTask(task);
            return ResponseEntity.ok(saved);
        } catch (Exception ex) {
            return ResponseEntity.badRequest().body("Error: " + ex.getMessage());
        }
    }

    // Get all tasks
    @GetMapping("/view")
    public ResponseEntity<List<Task>> getAll() {
        return ResponseEntity.ok(taskService.getAllTasks());
    }

    // Complete a task
 // âœ… Toggle complete status
    const handleComplete = async (id) => {
      const token = localStorage.getItem('token');
      const res = await fetch(`http://localhost:2006/tasks/complete/${id}`, {
        method: 'PATCH',
        headers: { Authorization: `Bearer ${token}` }
      });

      if (res.ok) {
        const updatedTask = await res.json();
        setTasks(tasks =>
          tasks.map(task =>
            task.id === id ? { ...task, status: updatedTask.status } : task
          )
        );
      }
    };


    // Delete
    @DeleteMapping("/delete/{id}")
    public ResponseEntity<String> delete(@PathVariable Long id) {
        taskService.deleteTask(id);
        return ResponseEntity.ok("Task deleted.");
    }

    // Progress summary
    @GetMapping("/progress")
    public ResponseEntity<ProgressResponse> progress() {
        return ResponseEntity.ok(taskService.getProgress());
    }
}
